name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Install dependencies
        run: uv pip install python-semantic-release

      - name: Create release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: semantic-release publish

      # To publish to PyPI, you would uncomment and configure the following steps.
      # This requires creating a PyPI token and adding it as a secret named PYPI_TOKEN
      # to your repository settings.
      #
      # - name: Build and publish to PyPI
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
      #   run: |
      #     semantic-release publish
      #     uv pip install build
      #     python -m build
      #     uv pip install twine
      #     twine upload dist/* -u __token__ -p $PYPI_TOKEN
